# -*- coding: utf-8 -*-
"""gemini_API

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SbcQDCO13Hc7J73ebFasGMTdW23tf4CR
"""

import os
import requests
import time

# Set up your Google Gemini API Key
API_KEY = #API_KEY_HERE

#Will have to validate and then sort
output_folder = r"C:\Users\admin\Desktop\clothes_dataset\synthetic_data_label1"
os.makedirs(output_folder, exist_ok=True)

#Change as needed for prompting clothing article
prompt = "A high-resolution image of a slightly but visibly worn article of clothing."

num_images = 150 #150 for now, overshoot as some images may be filtered out and deleted

IMAGEN_API_URL = "https://generativelanguage.googleapis.com/v1beta/models/imagen-3:generate"


def generate_image(prompt, image_number):
    payload = {
        "prompt": prompt,
        "number": 1  # Generate one image per request
    }
    headers = {"Content-Type": "application/json", "Authorization": f"Bearer {API_KEY}"}

    response = requests.post(IMAGEN_API_URL, json=payload, headers=headers)

    if response.status_code == 200:
        try:
            data = response.json()
            image_url = data["candidates"][0]["image"]["url"]

            # Download and save the image
            image_response = requests.get(image_url)
            if image_response.status_code == 200:
                image_path = os.path.join(output_folder, f"synthetic_{image_number:03d}.jpg")
                with open(image_path, "wb") as f:
                    f.write(image_response.content)
                print(f"Saved: {image_path}")
            else:
                print(f"Failed to download image {image_number}")

        except KeyError:
            print(f"No image received for request {image_number}")

    else:
        print(f"Error {response.status_code}: {response.text}")


#Add a slight delay to avoid rate limits
for i in range(1, num_images + 1):
    generate_image(prompt, i)
    time.sleep(1)  # Sleep to prevent API throttling

print("Clothes image generation complete!")